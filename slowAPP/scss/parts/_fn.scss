@charset "utf-8"; //解决中文报错
@import "flex";
$is_modern    :1 !default; // 兼容低版本ie

$color_default      :#666 !default;
$color_dark         :#333 !default;
$color_light        :#999 !default;
$color_blue         :#27c3dc !default;
$color_bg_light     :#f5f5f5 !default;
//移动端利用 rem 布局 ejs同时引入viewport-util.js
//比如设计稿是100px
// sass:
// div {
//  width:100/$ppr
// }
// Ouput:
// div {
//  width:2.13333rem
// }
$ppr                :750px/16px/1rem !default;

$page_padding :5px !default;

// css3 -webkit-,-moz-,-ms-,-o- 的前缀简写
// 第一个参数为属性和值，第二个参数则是前缀
@mixin prefix($map, $vendors:webkit moz ms o){
	@each $prop, $value in $map{
		@if $vendors {
			@each $vendor in $vendors {
				#{'-' + $vendor + '-' + $prop}:#{$value};
			}
		}
		// Dump regular property anyway
		#{$prop}:#{$value};
	}
}
// sass:
// .element {
//  @include prefix((transform: translate(-50%, -50%)), webkit ms);
// }
// Ouput:
// .element {
//  -webkit-transform: translate(-50%, -50%);
//  -ms-transform: translate(-50%, -50%);
//  transform: translate(-50%, -50%);
// }
@mixin keyframes($name){
	@keyframes #{$name}{@content}
	@-webkit-keyframes #{$name}{@content}
	@-moz-keyframes #{$name}{@content}
	@-o-keyframes #{$name}{@content}
	@-ms-keyframes #{$name}{@content}
}
// @include keyframes(donghua){
// 	0%{margin-top:0;}
// 	25%{margin-top:-10px;}
// 	50%{margin-top:-20px;}
// 	75%{margin-top:-10px;}
// 	100%{margin-top:0;}
// }

@mixin cf(){
	@if($is_modern==0){
		*zoom:1;
	}
	&:before,&:after{content:"";display:table;}
	&:after{clear:both;overflow:hidden;}
}

// inline-block
@mixin inline-block($vertical-align:middle){
	display:inline-block;
	@if($is_modern==0){
		*display:inline;*zoom:1;
	}
	vertical-align:#{$vertical-align};//*vertical-align:auto;
}
@mixin ib($valign:middle){
	@include inline-block($valign);
}

// 通用居中样式
// 使用见_layout.scss
@mixin imge($vertical-align:middle){
	@include inline-block($vertical-align);font-size:12px;font-size:1rem;line-height:normal;
}
@mixin imgc($is_image:1, $selecor:img, $align:center, $vertical-align:middle){
	font-size:0;
	@if($align!=left){
		text-align:$align;
	}
	@if($is_modern==0){
		&:before,.iecp{@include ib($vertical-align);}
		&:before,.iecp{content:"";height:100%;font-size:0;line-height:0;width:0;}
	}@else{
		&:before{@include ib($vertical-align);}
		&:before{content:"";height:100%;font-size:0;line-height:0;width:0;}
	}

	//此处在sass编译中报错，暂时先注释了
	/* #{$selecor}{
		@if($is_image==1){
			@include inline-block($vertical-align);max-width:100%;max-height:100%; //大图片等比缩小至父元素大小
		}@elseif($selecor!=img){
			@include inline-block($vertical-align);font-size:12px;font-size:1rem;line-height:normal;
		}
	} */
}
@mixin mln($line:2){
	overflow:hidden;text-overflow:ellipsis;
	display:-webkit-box;-webkit-box-orient:vertical;
	-webkit-line-clamp:$line;
}
// $is_modern:1;
// .test{@include imgc($is_image:0,$align:left);}

// 单行溢出省略
@mixin sln(){overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}

// webkit多行溢出省略
%mln{@include mln;}

%cf{@include cf();}
%inline-block{@include inline-block;}
%ib{@include inline-block;}
%imge{@include imge();}
%imgc{@include imgc();}
%sln{@include sln();}

// .test{@extend %inline-block;}

@mixin opacity($val:0.5){
	opacity:$val;
	filter:alpha(opacity=$val*100);
}

// @param
// $color - 普通的十六进制颜色值 #123456
// $alpha - 透明度0 ~ 1
@mixin background-color-rgba($color, $alpha){
	$rgba:rgba($color,$alpha);
	$ie-hex-str:ie-hex-str($rgba);
	background-color:$rgba;
	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$ie-hex-str},endColorstr=#{$ie-hex-str});
	@media screen and (min-width:0px){
		filter:none;
	}
}

@mixin size($width:auto, $height:$width){
	width:$width;height:$height;
}

@mixin user-select($val){
	@include prefix((user-select:$val), webkit moz);
}

@mixin box-sizing($mode:content-box){
	@include prefix((box-sizing:$mode), webkit moz);
}
@mixin boxSizing($mode:content-box){
	@include box-sizing($mode);
}

@mixin border-radius($n:0){
	@include prefix((border-radius:$n));
}
@mixin borderRadius($n:0){
	@include border-radius($n);
}
@mixin border-top-left-radius($n:0){
	@include prefix((border-top-left-radius:$n));
}
@mixin border-top-right-radius($n:0){
	@include prefix((border-top-right-radius:$n));
}
@mixin border-bottom-left-radius($n:0){
	@include prefix((border-bottom-left-radius:$n));
}
@mixin border-bottom-right-radius($n:0){
	@include prefix((border-bottom-right-radius:$n));
}
@mixin background-circle($size, $color){
	&{@include size($size);@include relative(null,1);text-align:center;}
	&:before{
		content:"";*content:normal;
		@include absolute(left 0 top 0, -1);
		border-left:$size dotted $color;
		border-top:$size dotted $color;
	}
	@media screen and (min-width:0px){
		#{&}{border-radius:50%;background:$color;}
		#{&}:before{content:normal;}
	}
}

// position
// 使用：@include relative(top 1px left 1px)--->position:relative;left:1px;top:1px;
@mixin position($position, $args, $index:null){
	position:unquote($position);
	@each $o in top right bottom left {
		$i: index($args, $o);
		@if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number {
			#{$o}: nth($args, $i + 1);
		}
	}
	@if($index){
		z-index:$index;
	}
}
@mixin absolute($args:null, $index:null){
	@include position("absolute", $args, $index);
}
@mixin fixed($args:null, $index:null){
	@include position("fixed", $args, $index);
}
@mixin relative($args:null, $index:null){
	@include position("relative", $args, $index);
}
// 例：
// sass
// .element {
// 	@include absolute(top 0 left 1em);
// }
// Ouput
// .element {
// 	position: absolute;
// 	top: 0;
// 	left: 1em;
// }

@mixin button($width, $height, $bgcolor:transparent,$bradius:3px,$bgcolor2:$bgcolor){
	@include size($width, $height);@include user-select(none);line-height:$height;
	text-align:center;background:$bgcolor;
	@if $bradius != 0 {
		border-radius:$bradius;
	}
	cursor:pointer;
	&:hover{background-color:darken($bgcolor2,5%);}
	&:active{background-color:darken($bgcolor2,5%);outline:thin dotted;outline-offset:-2px;}
}

@mixin placeholder{
	&::-webkit-input-placeholder {
		@content // Chrome, Safari, Opera
	}
	&:-moz-placeholder{
		@content // Mozilla Firefox 4-18使用伪类
	}
	&::-moz-placeholder {
		@content // Firefox 19+
	}
	&:-ms-input-placeholder {
		@content // IE 10+
	}
}

// Returns the opposite direction of each direction in a list
// @author Hugo Giraudel
// @param {List} $directions - List of initial directions
// @return {List} - List of opposite directions
@function opposite-direction($directions) {
	$opposite-directions:();
	$direction-map:(
		'top'    : 'bottom',
		'right'  : 'left',
		'bottom' : 'top',
		'left'   : 'right',
		'center' : 'center',
		'ltr'    : 'rtl',
		'rtl'    : 'ltr'
	);
	@each $direction in $directions {
		$direction: to-lower-case($direction);
		@if map-has-key($direction-map, $direction) {
			$opposite-directions: append($opposite-directions, unquote(map-get($direction-map, $direction)));
		} @else {
			@warn "No opposite direction can be found for `#{$direction}`. Direction omitted.";
		}
	}
	@return $opposite-directions;
}
// 例：scss
// .selector {
//   background-position: opposite-direction(top right);
// }
// css
// .selector {
//   background-position: bottom left;
// }

//生成 三角
@mixin triangle($direction, $position, $color:currentcolor, $size:1em) {
	$direction: if(function-exists("to-lower-case") == true, to-lower-case($direction), $direction);
	@if not index(top right bottom left, $direction) {
		@warn "Direction must be one of `top`, `right`, `bottom` or `left`; currently `#{$direction}`.";
	} @else {
		// Core stuff
		@include absolute($position);@include size(0);
		border-#{opposite-direction($direction)}: $size solid $color;
		$perpendicular-border: $size solid transparent;
		@if $direction == top or $direction == bottom {
			border-left:   $perpendicular-border;
			border-right:  $perpendicular-border;
		} @else if $direction == right or $direction == left {
			border-bottom: $perpendicular-border;
			border-top:    $perpendicular-border;
		}
	}
}

// 列：scss
// .selector{@include triangle(right,top 5px right -5px,#EA3434,5px);}
// css
// .selector {
// 	top: 5px;
// 	right: -5px;
// 	position: absolute;
// 	width: 0;
// 	height: 0;
// 	border-left: 5px solid #EA3434;
// 	border-bottom: 5px solid transparent;
// 	border-top: 5px solid transparent
// }

@mixin tip-box($direction, $position, $arrSize, $bgColor:white, $borderColor:black){
	$dirMap : ('top':'bottom', 'right':'left', 'bottom':'top', 'left':'right');
	$od     : map-get($dirMap, $direction);// 反方向
	$n      : 1;
	@if index(right bottom, $direction){
		$n:2;
	}
	padding-#{$direction}:nth($arrSize, $n);// padding使用相应宽/高的值，使可以hover到tip上显示
	.tip-content{
		position:relative;background:$bgColor;border-radius:8px;border:1px solid $borderColor;
		&:before,&:after,.before,.after{
			@include absolute($position);@include size(0);content:'';
			border-style:solid;border-color:transparent;
			border-#{$od}:nth($arrSize,1) solid $borderColor;
			@if index(top bottom, $direction){
				border-left-width  : nth($arrSize,1);
				border-right-width : nth($arrSize,2);
			}@else if index(left right, $direction){
				border-top-width    : nth($arrSize,1);
				border-bottom-width : nth($arrSize,2);
			}
		}
		&:after,.after{
			@include absolute($direction nth($position, index($position, $direction)+1)+1);
			border-#{$od}-color:$bgColor;
		}
	}
}
// .tip{
// 	@include ib;width:100px;margin-top:15px;margin-right:15px;
// 	word-break:break-line;word-wrap:break-word;
// 	@include relative(top 10px left 14px);
// 	line-height:16px;color:#ff8144;
// 	.tip-content{padding:15px;}
// 	@include tip-box(top, left 13px top -13px, 10px 10px);
// }
